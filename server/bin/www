#!/usr/bin/env node

var app = require('../app');
var debug = require('debug')('server:server')('http');
var http = require('http');
var models = require("../models/index");

var port = 8080;
app.set('port', port);

var server = http.createServer(app);

models.sequelize.sync({ force: true });

var listener = app.listen(port, function() {
    console.log('Listening on port ' + listener.address().port);

});


function onError(error) {
    if (error.syscall !== 'listen') {
        throw error;
    }

    var bind = typeof port === 'string' ?
        'Pipe ' + port :
        'Port ' + port;

    // handle specific listen errors with friendly messages
    switch (error.code) {
        case 'EACCES':
            console.error(bind + ' requires elevated privileges');
            process.exit(1);
            break;
        case 'EADDRINUSE':
            console.error(bind + ' is already in use');
            process.exit(1);
            break;
        default:
            throw error;
    }
}

function onListening() {
    var addr = server.address();
    var bind = typeof addr === 'string' ?
        'pipe ' + addr :
        'port ' + addr.port;
    debug('Listening on ' + bind);
}